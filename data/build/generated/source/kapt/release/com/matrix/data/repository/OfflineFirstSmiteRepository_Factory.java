// Generated by Dagger (https://dagger.dev).
package com.matrix.data.repository;

import com.matrix.data.local.interfaces.PatchVersionDataSource;
import com.matrix.data.local.interfaces.SmiteLocalDataSource;
import com.matrix.data.network.interfaces.SmiteRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OfflineFirstSmiteRepository_Factory implements Factory<OfflineFirstSmiteRepository> {
  private final Provider<SmiteRemoteDataSource> networkDataSourceProvider;

  private final Provider<SmiteLocalDataSource> localDataSourceProvider;

  private final Provider<PatchVersionDataSource> patchVersionDataSourceProvider;

  public OfflineFirstSmiteRepository_Factory(
      Provider<SmiteRemoteDataSource> networkDataSourceProvider,
      Provider<SmiteLocalDataSource> localDataSourceProvider,
      Provider<PatchVersionDataSource> patchVersionDataSourceProvider) {
    this.networkDataSourceProvider = networkDataSourceProvider;
    this.localDataSourceProvider = localDataSourceProvider;
    this.patchVersionDataSourceProvider = patchVersionDataSourceProvider;
  }

  @Override
  public OfflineFirstSmiteRepository get() {
    return newInstance(networkDataSourceProvider.get(), localDataSourceProvider.get(), patchVersionDataSourceProvider.get());
  }

  public static OfflineFirstSmiteRepository_Factory create(
      Provider<SmiteRemoteDataSource> networkDataSourceProvider,
      Provider<SmiteLocalDataSource> localDataSourceProvider,
      Provider<PatchVersionDataSource> patchVersionDataSourceProvider) {
    return new OfflineFirstSmiteRepository_Factory(networkDataSourceProvider, localDataSourceProvider, patchVersionDataSourceProvider);
  }

  public static OfflineFirstSmiteRepository newInstance(SmiteRemoteDataSource networkDataSource,
      SmiteLocalDataSource localDataSource, PatchVersionDataSource patchVersionDataSource) {
    return new OfflineFirstSmiteRepository(networkDataSource, localDataSource, patchVersionDataSource);
  }
}
